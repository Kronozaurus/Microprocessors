     1        0097      LED EQU P1.7
     2                  ;********* Ustawienie TIMERów *********
     3                  ;TIMER 0
     4        0000      T0_G EQU 0 ;GATE
     5        0000      T0_C EQU 0 ;COUNTER/-TIMER
     6        0001      T0_M EQU 1 ;MODE (0..3)
     7        0001      TIM0 EQU T0_M+T0_C*4+T0_G*8
     8                  ;TIMER 1
     9        0000      T1_G EQU 0 ;GATE
    10        0000      T1_C EQU 0 ;COUNTER/-TIMER
    11        0000      T1_M EQU 0 ;MODE (0..3)
    12        0000      TIM1 EQU T1_M+T1_C*4+T1_G*8
    13        0001      TMOD_SET EQU TIM0+TIM1*16
    14                  ;50[ms] = 50 000[ŠS]*(11.0592[MHz]/12) =
    15                  ; = 46 080 cykli = 180 * 256
    16        004C      TH0_SET EQU 256-180
    17        0000      TL0_SET EQU 0
    18                  ;**************************************
    19  0000: 02 01 00  	LJMP START
    20  0100:           	ORG 100H
    21  0100:           START:
    22                  
    23  0100: 12 81 0C  	LCALL LCD_CLR
    24  0103: 78 00     	MOV R0, #0
    25                  
    26  0105: 12 01 70  	LCALL WPROWADZ
    27  0108: F9        	MOV R1, A ;godzina startowa
    28  0109: 12 01 70  	LCALL WPROWADZ
    29  010C: FA        	MOV R2, A ;minuta startowa
    30  010D: 12 01 70  	LCALL WPROWADZ
    31  0110: FB        	MOV R3, A ;sekunda startowa
    32                  
    33  0111: 12 81 0C  	LCALL LCD_CLR	
    34  0114: 12 81 14  	LCALL WAIT_ENTER
    35  0117: 12 81 0C  	LCALL LCD_CLR
    36                  	
    37  011A: 12 01 70  	LCALL WPROWADZ
    38  011D: FC        	MOV R4, A ;godziny alarmu
    39  011E: 12 01 70  	LCALL WPROWADZ
    40  0121: FD        	MOV R5, A ;minuty alarmu
    41  0122: 12 01 70  	LCALL WPROWADZ
    42  0125: FE        	MOV R6, A ;sekundy alarmu
    43                  	
    44  0126: 75 89 01  	MOV TMOD,#TMOD_SET ;Timer 0 liczy czas
    45  0129: 75 8C 4C  	MOV TH0,#TH0_SET ;Timer 0 na 50ms
    46  012C: 75 8A 00  	MOV TL0,#TL0_SET
    47  012F: D2 8C     	SETB TR0 ;start Timera
    48                  
    49                  	
    50  0131:           MINUTY: ;etykieta sprawdzajaca czy minelo 60 sekund, zeby dodac kolejna minute
    51  0131: BB 3C 0E  	CJNE R3,#60, SEKUNDY ;sprawdz czy minelo 60 sekund, jak nie skocz do SEKUNDY
    52                  	
    53  0134: 7B 00     	MOV R3, #0 ;zeruje licznik sekund
    54  0136: 0A        	INC R2 ;dodaje minute
    55                  	
    56  0137:           GODZINY: ;etykieta sprawdzajaca czy minelo 60 minut, zeby dodac kolejna godzine
    57  0137: BA 3C F7  	CJNE R2, #60, MINUTY
    58                  	
    59  013A: 7A 00     	MOV R2, #0 ;zeruje licznik minut
    60  013C: 09        	INC R1 ;dodaje godzine
    61                  	
    62  013D:           RESET: ;etykieta sprawdzajaca, czy minely 24 godziny i zerujaca je jezeli tak
    63  013D: B9 18 F1  	CJNE R1, #24, MINUTY
    64                  
    65  0140: 79 00     	MOV R1, #0 ;zeruje godzine
    66                  	
    67  0142:           SEKUNDY: ;etykieta odliczajaca 1 sekundę i wyświetlająca czas
    68                  
    69  0142: 7F 14     	MOV R7,#20 ;odczekaj czas 20*50ms=1s
    70  0144: 12 01 7D  	LCALL WYSWIETL
    71                  
    72  0147: E9        	MOV A, R1
    73  0148: B5 04 0E  	CJNE A, 04H, BRAK_ALARMU ;jesli godziny sie nie zgadzaja (04H to miejsce w pamieci wartosci rejestru R4 przechowujacego godzine alarmu) idz do brak alarmu
    74  014B: EA        	MOV A, R2
    75  014C: B5 05 0A  	CJNE A, 05H, BRAK_ALARMU ;jesli minuty sie nie zgadzaja idz dalej (do etykiety BRAK ALARMU)
    76  014F: EB        	MOV A, R3
    77  0150: B5 06 06  	CJNE A, 06H, BRAK_ALARMU ;jesli sekundy sie nie zgadzaja idz do etykiety brak alarmu
    78                  	
    79  0153: B2 97     	CPL LED
    80  0155: C2 95     	CLR P1.5 ;wlaczamy brzeczyk
    81  0157: 78 03     	MOV R0, #3 ;zaczynamy odliczanie 2 sekund przez ktore bedzie trwal alarm, 
    82                  	;3 poniewaz jedna sekunda przeskakuje natychmiast
    83                  
    84  0159:           BRAK_ALARMU: ;jesli brak alarmu, ale tez jesli byl alarm wykonujemy ta etykiete
    85  0159: 0B        	INC R3 ;zwiekszamy sekunde
    86  015A: D8 04     	DJNZ R0, TIME_N50 
    87                  	;jezeli R0, zawierajacy czas trwania alarmu jest rozny od 0, zmniejszamy czas alarmu o 1 i przechodzimy dalej do TIME_N50 
    88                  	;pomijajac nastepne instrukcje wylaczenia brzeczyka
    89                  	
    90  015C: B2 97     	CPL LED
    91  015E: D2 95     	SETB P1.5 ;wylaczamy brzeczyk, pominiete jesli R7 rozne od 0
    92                  
    93  0160:           TIME_N50:
    94  0160: 30 8D FD  	JNB TF0,$ ;czekaj, aż Timer 0
    95                  	;odliczy 50ms
    96  0163: 75 8C 4C  	MOV TH0,#TH0_SET ;TH0 na 50ms
    97  0166: C2 8D     	CLR TF0 ;zerowanie flagi timera 0
    98  0168: DF F6     	DJNZ R7,TIME_N50 ;odczekanie N*50ms
    99                  
   100                  	
   101  016A: 02 01 31  	LJMP MINUTY
   102  016D: 02 01 6D  	LJMP $
   103                  
   104  0170:           WPROWADZ:
   105  0170: 12 81 1C  	LCALL WAIT_KEY ; Wczytaj liczbę dziesiątek
   106  0173: 75 F0 0A  	MOV B,#10 ; pomnóż
   107  0176: A4        	MUL AB ; przez 10
   108  0177: F8        	MOV R0,A ; zapisz liczbę w R0
   109  0178: 12 81 1C  	LCALL WAIT_KEY ;wczytaj liczbę jedności
   110  017B: 28        	ADD A,R0 ; dodaj liczbę jedności do R0
   111                  	
   112  017C: 22        	RET ; wyjdź z podprogramu. Wynik w A.
   113                  	
   114                  	
   115  017D:           WYSWIETL:
   116  017D: 12 81 0C  	LCALL LCD_CLR
   117                  	
   118  0180: 75 F0 0A  	MOV B, #10
   119  0183: E9        	MOV A, R1
   120  0184: 84        	DIV AB ;start bcd
   121  0185: C4        	SWAP A
   122  0186: 45 F0     	ORL A, B;end bcd
   123  0188: 12 81 04  	LCALL WRITE_HEX
   124                  	
   125  018B: 74 3B     	MOV A, #';'
   126  018D: 12 81 02  	LCALL WRITE_DATA
   127                  	
   128  0190: EA        	MOV A, R2
   129  0191: 75 F0 0A  	MOV B, #10
   130  0194: 84        	DIV AB ;start bcd
   131  0195: C4        	SWAP A
   132  0196: 45 F0     	ORL A, B;end bcd
   133  0198: 12 81 04  	LCALL WRITE_HEX
   134                  	
   135  019B: 74 3B     	MOV A, #';'
   136  019D: 12 81 02  	LCALL WRITE_DATA
   137                  	
   138  01A0: EB        	MOV A, R3
   139  01A1: 75 F0 0A  	MOV B, #10
   140  01A4: 84        	DIV AB ;start bcd
   141  01A5: C4        	SWAP A
   142  01A6: 45 F0     	ORL A, B;end bcd
   143  01A8: 12 81 04  	LCALL WRITE_HEX
   144                  	
   145  01AB: 22        	RET
   146                  
